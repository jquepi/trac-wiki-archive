'''This document is a draft.'''

'''jml wrote it, and wants to give it a lot of love very very soon. If you want to edit it before then, consider talking to jml'''

= Overview =

To release Twisted, we do a pre-release and then an actual release.


= Prerequisites =

To release Twisted, you will need:
 * Commit privileges to Twisted
 * Shell access to cube.twistedmatrix.com
 * Write permissions to /srv/www-data/twisted on cube (normally, www-data membership)
 * Write permissions to /srv/www-data/website/vhosts/twistedmatrix.com/documents


= Version numbers =

Twisted releases use a time-based numbering scheme. Releases versions like YY.MM.mm, where YY is the last two digits of the year of the release, MM is the number of the release in the year, and mm is the number of the patch release.

For example:
 * The first release of 2010 is 10.0.0
 * The second release of 2010 is 10.1.0
 * If 10.1.0 has some critical defects, then a patch release would be numbered 10.1.1

Every release of Twisted includes the whole project, the core and all subprojects. Each of these has the same number.


= How to do a pre-release =

 1. Check the milestone for the upcoming release
    1. Get rid of any non-critical bugs
    1. Get any critical bugs fixed
 1. Check for any [http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&type=regression&order=priority regressions]
 1. Read through the `INSTALL` and `README` files to make sure things like the supported Python versions are correct
    1. Check the required Python version.
    1. Check that the list matches the current set of buildbots.
    1. Any mistakes should be fixed in trunk before making the release branch
 1. Choose a version number.
 1. File a ticket
    1. Assign it to the upcoming release milestone
    1. Assign it to yourself
    1. Call it "Release <version-number>"
 1. Check [http://twistedmatrix.com/boxes-supported buildbot] to make sure all supported platforms are green (wait for pending builds if necessary).
 1. Make a branch (e.g. `mkbranch Twisted release-4290`)
 1. Run `./bin/admin/change-versions XX.YY.ZZpreN`
 1. Commit the changes made by `change-versions`
 1. Run `./bin/admin/build-news .`
 1. Commit the changes made by `build-news`
 1. Bump copyright dates in [source:trunk/LICENSE], [source:trunk/twisted/_version.py] and [source:trunk/README]
 1. Make a temporary directory for the tarballs to live in (e.g. `mkdir /tmp/twisted-release`)
 1. Run `./bin/admin/build-tarballs . /tmp/twisted-release/`
 1. Upload the tarballs to a public website
 1. Write the pre-release announcement
    1. Read through the `NEWS` file and summarize the interesting changes for the release
    1. Get someone else to look over the announcement before doing it
 1. Announce the pre-release on
    1. the twisted-python [wiki:TwistedCommunity#MailLists mailing list]
    1. on IRC in the #twisted topic
    1. in a blog post, ideally `labs.twistedmatrix.com`

== Pre-release announcment ==

The pre-release announcement should mention the important changes since the last release, and exhort readers to test this pre-release.

Here's what the 10.0.0pre1 release annoucement ''ought'' to have looked like:

{{{
Live from PyCon Atlanta, I'm pleased to herald the approaching
footsteps of the 10.0 release.

Tarballs for the first Twisted 10.0.0 pre-release are now available at:
 http://people.canonical.com/~jml/Twisted/

Highlights include:

 * Improved documentation, including "Twisted Web in 60 seconds"

 * Faster Perspective Broker applications

 * A new Windows installer that ships without zope.interface

 * Twisted no longer supports Python 2.3

 * Over one hundred closed tickets

For more information, see the NEWS file.

Please download the tarballs and test them as much as possible.

Thanks,
jml
}}}



== For the release itself ==

 * Remove the 'pre'
   * So tedious! Write a tool to do this. #4316
   * `find . -type f -not -path '*.svn*' -not -name '*~' | xargs grep -n 'pre2'`
 * Add the quote of the release
 * Get the branch reviewed
 * Merge the branch into trunk
 * Tag the branch
   * `svn cp svn+ssh://svn.twistedmatrix.com/svn/Twisted/branches/release-x-4290 svn+ssh://svn.twistedmatrix.com/svn/Twisted/tags/releases/twisted-10.0.0`
 * '''If at this point you discover a showstopper bug in the release:'''
   * File a ticket
   * Fix the bug
   * Get it reviewed
   * Land the fix
   * Merge the change to the release branch (not the tag)
   * Delete the tag
   * Make a new tag with the same name from the release branch
   * '''Or''' make a new release with a micro version change
 * Make new tarballs
 * Build windows installers
   * http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/
   * http://buildbot.twistedmatrix.com/builders/winxp32-py2.6-msi/
   * Branch: "branches/release-x-4290"
   * Download from http://buildbot.twistedmatrix.com/builds/
 * Sign them!
   * `md5sum * | gpg -a --clearsign > twisted-10.0.0-md5sums.txt`
   * `scp twisted-10.0.0-md5sums.txt  cube.twistedmatrix.com:/srv/www-data/twisted/Releases/`
   * [http://tmrc.mit.edu/mirror/twisted/twisted-9.0.0-md5sums.txt example of the result]
 * Upload to the official upload locations:
   * Prerequisites: cube account; write access to /srv/www-data/twisted/Releases/
   * <radix> jml: `cube:/srv/www-data/twisted/Releases/<Project>/<First two parts of version number>/*`
   * We hell of need a script to do this too. #2888
   * New directories are 2775, and ought to be in the www-data group. New files are 664, and ought to be in the www-data group
   * `find /srv/www-data/twisted/Releases -name '*10.0.0*' | xargs chmod g+w`
 * Wait for the tarballs to be mirrored to tmrc
   * They are mirrored 15 minutes every hour
   * foom offered to force the mirror
 * Update the WikiStart and [wiki:Downloads] pages
 * Update website documentation
   * Get the dependencies
     * Twisted (export from tagged release branch)
     * Pydoctor
     * Nevow
     * Epytext
   * Run the unofficial build-docs script
     * XXX: include here
   * Update the permissions
     * XXX: how?
   * cp the documents to /srv/.../documentation/10.0.0
     * XXX: full path please
   * rm -rf twisted/{vfs,web2} from the export
   * Run the unofficial build-api script
     * XXX: include here
   * Move the API docs and update the permissions
     * cd /srv/www-data/website/vhosts/twistedmatrix.com/documents
     * mv ~exarkun/documentation/twisted-10.0.0/api/ ./10.0.0/
     * chown -R www-data.www-data 10.0.0/api/
   * Run the build-docs-book.py script
   * Copy the book
   * Check the permissions
     * XXX: what permissions?
   * Test the generated docs
     * XXX: what to look for?
   * Change the "current" symlink
     * XXX: exact commands
   * Removing the staging area
 * Announce more fully:
   * twisted-python@twistedmatrix.com
   * python-announce-list@python.org
   * python-list@python.org,
   * twisted-web@twistedmatrix.com
   * twisted-jabber@ik.nu
   * PyPI
     * You need to be exarkun to do this
     * http://pypi.python.org/pypi/Twisted/
     * http://pypi.python.org/pypi/Twisted%20Pair/
     * http://pypi.python.org/pypi/Twisted%20Conch/
     * http://pypi.python.org/pypi/Twisted%20Core/
     * http://pypi.python.org/pypi/Twisted%20Lore/
     * http://pypi.python.org/pypi/Twisted%20Mail/
     * http://pypi.python.org/pypi/Twisted%20Names/
     * http://pypi.python.org/pypi/Twisted%20News/
     * http://pypi.python.org/pypi/Twisted%20Runner/
     * http://pypi.python.org/pypi/Twisted%20Web/
     * http://pypi.python.org/pypi/Twisted%20Words/
   * Launchpad; https://edge.launchpad.net/twisted/+announcements
   * `labs.twistedmatrix.com`
   * Twitter, if you feel like it
   * #twisted topic on IRC (you'll need ops)
 * Packaging
   * Do we need to do anything for Debian / Ubuntu?
   * OS X
     * ~~Packaging not necessary, there's no good way to make an installer that overrides the default Python~~ see #3279
     * Definitely need instructions for OS X-using developers who want to use a more recent version of Twisted
   * Win32 - see [source:trunk/win32/maintainer-notes.txt]
   * eggs?

== Notes ==

 * Test `change-versions` with pre-releases
 * There should be a template for release announcements
   * Pre-release announcements should include an exhortation to test
   * Release announcements should include actual NEWS summaries and maybe a pointer to the full thing
 * There are missing scripts:
   * for uploading pre-release tarballs
     * Need a standard place to upload tarballs
   * for signing tarballs
   * for uploading release tarballs
 * It would be nice if the news fragments contained information about who made the changes
 * Mine ReleaseProcedure for useful information
 * A definition or at least some examples of what bugs should be considered release blockers would be a good idea. Ultimately it's the RM's discretion though.
 * "Other fixes" and maybe all tickets should be links when they are on the web


= Examples =

== Build API docs for website ==

{{{
#!python
from twisted.python._release import APIBuilder
from twisted.python.filepath import FilePath

APIBuilder().build(
    'Twisted', 'http://twistedmatrix.com/', 
    'http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.0.0/',
    FilePath('twisted'),
    FilePath('api'))
}}}

== Build howto documents for website ==

{{{
#!python
from twisted.python import _release as r
from twisted.python.filepath import FilePath
done = {}
for p in FilePath('doc').walk():
    if p.basename() == 'man':
        print 'processing manual pages:', p.path
        done[p] = True
        r.ManBuilder().build(p)
for p in FilePath('doc').walk():
    if p.basename().endswith('.xhtml'):
        if p.parent() not in done:
            print 'processing howto pages:', p.parent().path
            done[p.parent()] = True
            r.DocBuilder().build(
                '10.0.0', FilePath('doc/core/howto'), p.parent(),
                FilePath('doc/core/howto/template.tpl'),
                'http://twistedmatrix.com/documents/10.0.0/api/%s.html',
                False)

print 'building book:'
for p in done:
    print '	', p.path
r.BookBuilder().build(FilePath('doc/core/howto'), done.keys(),
                      FilePath('doc/core/howto/book.tex'),
                      FilePath('book.pdf'))
}}}

== Twisted 10.0.0 announcement ==

{{{
On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 10.0.

Highlights include:

 * Improved documentation, including "Twisted Web in 60 seconds"

 * Faster Perspective Broker applications

 * A new Windows installer that ships without zope.interface

 * Twisted no longer supports Python 2.3

 * Over one hundred closed tickets

For more information, see the NEWS file.

It's stable, backwards compatible, well tested and in every way an
improvement. Download it now from:

 http://tmrc.mit.edu/mirror/twisted/Twisted/10.0/Twisted-10.0.0.tar.bz2 or
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.0/Twisted-10.0.0.win32-py2.5.msi

Many thanks to Jean-Paul Calderone and Chris Armstrong, whose work on
release automation tools and answers to numerous questions made this
possible. Thanks also to the supporters of the Twisted Software
Foundation and to the many contributors for this release.

jml
}}}

= Open questions =

 * How do we manage the case where there are untested builds in trunk?
 * How/when in this process are the docs built?
 * When should the front page of the wiki be updated?
 * Should picking a release quote be part of the release or the pre-release
 * A thought for future releases: since we'd really like folks to download the prereleases and try them out, perhaps we should put the [source:trunk/NEWS NEWS] file on the web somewhere official, too, so they can see all the cool stuff they can try out?
   * XXX: jml doesn't know what this means any more

= See also =

 * [http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&component=release+management&order=priority release management tickets]
 * [http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=regular-releases&order=priority regular-release tickets]
 * ReleaseAutomation
 * [http://doc.bazaar.canonical.com/bzr.dev/developers/releasing.html Releasing Bazaar] -- release documentation for another project that does time-based releases