These are things that developers with commit access to the Twisted source repository should know.  The first list is of policy items (i.e., things you should or should not try to do).

  1. All development is done in branches.
  1. All code committed to trunk must go through the ReviewProcess.
  1. trunk commit messages must follow the format described on ReviewProcess so that various pieces of automation can work.
  1. If you check in something that breaks [http://buildbot.twistedmatrix.com/boxes-supported?branch=trunk&num_builds=20 trunk], revert it
  1. Everything you check in to Git is licensed under [https://github.com/twisted/twisted/blob/trunk/LICENSE Twisted's license]
  1. Be in the IRC channel, at least when you're going to be committing to trunk (don't feel bad about avoiding the distraction when you're trying to get stuff done though).
  1. Have fun, but not too much.

This second list includes various technical details about how you might go about doing Twisted development (and has overlap for organizational purposes):

  1. All development is done in branches
    1. Branch names must follow the naming convention so that various pieces of automation can work.
  1. trunk commit messages must follow the format described on ReviewProcess so that various pieces of automation can work.
    1. If you merge a branch with the correct "Fixes ticket:NNNN" message and the ticket is not automatically closed:
      1. Make sure you got the ticket number right
      1. trac is buggy [https://github.com/twisted-infra/trac-config/issues/20 trac-config/20]
        1. Log on to the svn.twistedmatrix.com shell
        1. Look at the end of `~/.post-commit.log` for a line like "+ /svn/Twisted/hooks/trac-post-commit-pb-client ..." which corresponds to your trunk commit
        1. Cross your fingers
        1. Re-run that command with all the same arguments
        1. With sufficient delays to allow trac to catch up, try again one or two more times if it still doesn't work.
        1. If it still doesn't work, find someone in the IRC channel to help
    1. If you check in something that breaks [http://buildbot.twistedmatrix.com/boxes-supported?branch=trunk&num_builds=20 trunk], revert it
      1. If the bad revision was 07c854353d,
        1. `cd ~/Projects/Twisted`
        1. `git revert -m 1 07c854353d .`
      1. Use "Reopens #NNNN" in the commit message to re-open the corresponding ticket
      1. Explain what broke and how and perhaps on which platform in the commit message
    1. If you need to re-merge the reverted branch, revert the reversion. 
      1. Create a new branch or merge trunk into your branch with was previously reverted.
      1. Revert again the commit containing the revert and commit the reversion: `git revert REVERT-SHA`.
      1. Make your changes.
      1. Push the changes for re-review
  1. If you are merging a branch into trunk, you must commit exactly the merge.  You may not make extra changes in the trunk working copy after the merge.
  1.  Use `force-build` if you want to test a branch on all supported builders before merging
    1. No, really, use it.  It saves a lot of time.
    1. `pip install twisted-dev-tools` to get `force-build` and other useful tools.
    1. `force-build` prints a link to a results page. The build results are also linked from the ticket page.
    1. There are certain unit-tests on certain builders that are known to fail intermittently. There's no official list of such tests, but you can look at [http://buildbot.twistedmatrix.com/boxes-supported?branch=trunk&num_builds=20 the history of trunk builds] for a particular builder to see if a particular failure shows up a lot. If you're sure that a given build failure is intermittent and not caused by the changes in your branch, you can still merge.
    1. See UsingBuildbot for more help.

Other documents that overlap and supplement this information include:
 * [http://twistedmatrix.com/documents/current/core/development/policy/svn-dev.html Working from Twisted's Code repository]
 * ReviewProcess
