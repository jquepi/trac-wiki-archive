== Objective ==

To have Twisted available on Python 3.3 and newer, with the same functionality as is currently available on Python 2.x.

== Strategy ==

  * Single source - The result will be a version of Twisted that is source-compatible with Python 2.6, Python 2.7, and Python 3.3.
  * Test-driven - Following the standard Twisted development process, all changed code will be fully automatically unit tested.
  * Opportunistic - Where module dependencies (within Twisted) need to be ported to support porting of the high-priority modules, modules may be split so that only some of their contents need to be ported.

All other standard Twisted development practices apply.

An initial minimal project (http://twistedmatrix.com/trac/milestone/Python%203.3%20Minimal) is being funded by Canonical and implemented by Future Foundries LLC (i.e. Itamar and Jean-Paul), with the aim of getting a basic subset of Twisted working, sufficient to run a specific Canonical project. If that is done and any time is left over in the contract, it will be spent doing more porting, so help by other developers will hopefully result in more of Twisted being ported.

== Reviewer check list ==

  1. Tests pass under 3.3.
  1. Ported modules were added to list of ported modules - `admin/_twistedpython3.py`
  1. No warnings when running using -3 mode under Python 2.7.
  1. All non-docstring strings are clearly marked as one of the various string categories (bytes/unicode/identifier/version-dependent).
  1. No use of 'str' except for things that really can differ across versions of Python.
  1. `from __future__ import division, absolute_import` was added to the module.
    1. And any code changes necessary to work with the resulting changed semantics were made.
  1. Verify dictionary methods were ported correctly.
  1. All calls to `open()` files should be in binary mode.

== Details ==

  1. Bootstrap the testing system
    1. Port the non-reactor parts of trial necessary to run the tests for the non-reactor parts of trial
      1. [ticket:5853 Refactor the implementation to separate the reactor and non-reactor parts into separate source files]
      1. Add more tests for uncovered functionality
      1. Get the non-reactor parts passing their own tests on Python 3.3 (alpha, until 3.3 is actually released)
    1. Test-driven port of the dependencies of the reactor features of trial
    1. Test-driven port of the reactor features of trial
  1. setup.py should only install ported modules on Python 3.
  1. Test-driven port of the following modules (some of which may be dependencies of above steps):
    * twisted.cred
    * twisted.internet.defer
    * twisted.trial
    * twisted.internet.gireactor
    * twisted.internet.selectreactor
    * twisted.internet.pollreactor
    * twisted.internet.ssl
    * twisted.protocols.basic
    * twisted.web
      * client
      * http
      * resource
      * server
      * http_headers
    * twisted.internet
      * abstract
      * reactor
      * endpoints
      * protocol
      * interfaces
      * error
      * task
    * twisted.python
      * failure
      * log
      * util
      * procutils
    * twisted.names
    * twisted.application
      * internet
      * service
  1. Build-slave for Python 3.3 should only run ported test modules.

  * Strings
    * Types
      * Python 2 largely conflates text and bytes in the `str` type, but offers `unicode` for unambiguous text usage.
      * Python 3 reduces the functionality of the `str` type and renames it to `bytes`, reflecting the intent that it be used for bytes only.  It renames the `unicode` type to `str`.
      * There is a third kind of string, used to represent Python identifiers and docstrings.  These are bytes in Python 2 and text in Python 3.
    * Plan
      * Python 2.x native (byte) strings will be changed to Python 3.x native (text) strings except where some particular consideration dictates something else.  For example, strings which belong to APIs primarily related to network traffic (ie, strings that come out of or go into sockets) will remain as byte strings.
      * As a consequence, APIs which previously only supported Python 2.x native (byte) strings will be changed on Python 3.x to accept native (text) strings.  Where there does not introduce a new requirement to choose an encoding, arbitrary text will be supported.  Where it does and the choice of encoding is trivially obvious (for example, dealing with a protocol which mandates UTF-8 in an RFC), arbitrary text will be supported.  Where the choice if encoding is not trivially obvious, only ASCII text will be supported.
      * A later porting pass will revisit these ASCII only sites and expand support to include arbitrary text.

  * Running `trial --version` requires the following modules:
   * twisted
   * twisted.application
   * twisted.application.app
   * twisted.application.reactors
   * twisted.application.service
   * twisted.copyright
   * twisted.internet
   * twisted.internet.defer
   * twisted.internet.protocol
   * twisted.internet.utils
   * twisted.persisted
   * twisted.persisted.sob
   * twisted.persisted.styles
   * twisted.plugin
   * twisted.python
   * [ticket:5877 twisted.python.compat]
   * twisted.python.components
   * twisted.python.context
   * [ticket:5916 twisted.python.deprecate]
   * twisted.python.failure
   * [ticket:5903 twisted.python.filepath]
   * twisted.python.hashlib
   * twisted.python.hook
   * [ticket:4920 twisted.python._initgroups]
   * twisted.python.lockfile
   * twisted.python.log
   * twisted.python.logfile
   * twisted.python.modules
   * [ticket:5896 twisted.python.monkey]
   * [ticket:5997 twisted.python.runtime]
   * twisted.python.text
   * twisted.python.threadable
   * twisted.python.usage
   * twisted.python.util
   * [ticket:5917 twisted.python.versions]
   * twisted.python.win32
   * twisted.python.zippath
   * twisted.scripts.trial
   * twisted.trial
   * twisted.trial.itrial
   * twisted.trial.reporter
   * twisted.trial.runner
   * twisted.trial.unittest
   * ticket:5886 twisted._version]

  Ideally we could omit a number of them:
    * `twisted.python.hook (#5860)
    * `twisted.python._initgroups` (#4920)
    * `twisted.python.deprecate` - we will not be porting deprecated code, presumably, so hopefully we can omit the module.
    * `twisted.python.win32` - windows is not a target platform for the initial release.
    * `twisted.persisted.sob` and `twisted.persisted.styles` - this is all useless and/or terrible.
    * No doubt some others we can get away with only porting part of the module.