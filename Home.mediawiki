{{{
#!div class="column-layout" style="display: table;"
{{{
#!div class="leftcol" style="display: table-cell"
{{{
#!div class="leftcolcol"
{{{
#!div id="download"
[[Image(/chrome/common/download_icon.png, id=download_icon, title=Downloads, alt="", link=wiki:Downloads)]]

= Downloads =

== Get Started with Pip ==

{{{
#!html
<pre class="wiki"
>$<a style="display: inline" href="https://hynek.me/articles/virtualenv-lives/">virtualenv</a>try-twisted
$ . try-twisted/bin/activate
$ pip install twisted[tls]
$ twist --help
</pre>
}}}

== Download Direct from PyPI ==

[https://pypi.org/project/Twisted/ https://pypi.org/project/Twisted/]

== Optional Dependencies ==

 * [https://twistedmatrix.com/documents/current/installation/howto/optional.html Install Extras]
}}}

{{{
#!div class="side-panel twisted-news"
{{{
#!html
<h1 style="padding-top: 0">Community</h1>
}}}
== See the code [https://github.com/twisted/twisted for Twisted] ([https://github.com/twisted and more]) on GitHub ==
== Read [https://labs.twistedmatrix.com/ our blog] ==
== Join [https://mail.python.org/mailman3/lists/twisted.python.org/ the discussion list] ==
== Come [https://web.libera.chat/#twisted chat] with us on IRC ==
== Report a [wiki:Security ðŸ”’security issue] == 
== Ask [https://stackoverflow.com/questions/tagged/twisted on Stack Overflow] ==
== Follow us [https://twitter.com/twistedmatrix on Twitter] ==
}}}


{{{
#!div class="side-panel donations"

== [WhyDonate Donate to Twisted] ==

Donations are [wiki:TwistedSoftwareFoundation#Background tax-deductible].

{{{
#!html
<div class="donation-buttons">
   
    <div>
    <form action="https://www.paypal.com/cgi-bin/webscr" method="post">
      <fieldset>
        <input name="cmd" value="_s-xclick" type="hidden">
        <input name="hosted_button_id" value="ZB3NXPUZHQUKS" type="hidden">
        <input name="currency_code" value="USD" type="hidden">
        <input name="amount" value="25" type="hidden">
        <input onclick="return setDonationAmount(this.form, 'amount')" type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" alt="PayPal">      
        <div style="text-align: center; padding-top: 3px; font-size: 0.85em; color: #555">PayPal</div>
        <img alt="" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
      </fieldset>
    </form>
    </div>

    <a href="https://flattr.com/thing/948720/Twisted-the-premier-networking-library-for-the-Python-language">
      <img src="https://twistedmatrix.com/trac/raw-attachment/wiki/TSF/SponsorLogos/flattr-badge-large.png" alt="Flattr us!" title="Flattr us!" crossorigin="anonymous" />
    </a>
</div>
}}}


= [wiki:TwistedSponsors Twisted Sponsors] =

Participate in the [wiki:TwistedSoftwareFoundation#BenefitsofSponsorship Twisted Project Sponsorship Program]! For [wiki:TwistedSoftwareFoundation#SponsorshipLevels Silver Sidewinder and higher-level] sponsors, we will display your logo here on the front page for one year.  

{{{
#!div class="twisted-sponsors"


=== VM Hosting sponsored by Microsoft Azure ===

{{{
#!html
<p><a href="https://azure.microsoft.com/" rel="nofollow"><img src="/trac/raw-attachment/wiki/TSF/SponsorLogos/azure_logo.png" alt=""></a></p>
}}}



=== Golden Tree Snake ===
{{{
#!html
<p><a href="https://thinkst.com/" rel="nofollow"><img src="/trac/raw-attachment/wiki/TSF/SponsorLogos/thinkst.png" alt=""></a></p>
}}}

=== Silver Sidewinder ===
{{{
#!html
<p><a href="https://www.variomedia.de/" rel="nofollow"><img src="/trac/raw-attachment/wiki/TSF/SponsorLogos/Variomedia-rescaled.png" alt=""></a></p>
}}}

}}}


}}}
}}}
}}}

{{{
#!div class="centercol" style="display: table-cell"

= What is Twisted? =

Twisted is an event-driven networking engine written in Python and licensed under the open source [https://www.opensource.org/licenses/mit-license.php MIT license]. It supports CPython 3.6+ and PyPy3.

* [https://github.com/twisted/twisted/releases/tag/twisted-22.4.0 Twisted 22.4.0 was the last version with Python 3.6 and PyPy3.6 support]
* [https://github.com/twisted/twisted/releases/tag/twisted-21.2.0 Twisted 21.2.0 was the last version with Python 3.5 support]
* [https://labs.twistedmatrix.com/2020/03/twisted-drops-python-27-support.html Twisted 20.3.0 was the last version with Python 2.7 and PyPy2 support].

== Code Examples ==

{{{
#!html
<ul id="frontpage-tabs" class="nav nav-tabs">
    <li class="active"><a href="#echoserver">Echo Server</a></li>
    <li><a href="#webserver">Web Server</a></li>
    <li><a href="#pubsubserver">Publish/Subscribe</a></li>
    <li><a href="#imap4client">Mail Client</a></li>
    <li><a href="#sshclient">SSH Client</a></li>
</ul>
}}}

{{{
#!div class="tab-content"

{{{
#!div class="tab-pane active" id="echoserver"

Twisted makes it easy to implement custom network applications. Here's a TCP server that echoes back everything that's written to it:

{{{
#!python
from twisted.internet import protocol, reactor, endpoints

class Echo(protocol.Protocol):
    def dataReceived(self, data):
        self.transport.write(data)

class EchoFactory(protocol.Factory):
    def buildProtocol(self, addr):
        return Echo()

endpoints.serverFromString(reactor, "tcp:1234").listen(EchoFactory())
reactor.run()
}}}

Learn more about [https://twistedmatrix.com/documents/current/core/howto/servers.html writing servers], [https://twistedmatrix.com/documents/current/core/howto/clients.html writing clients] and the [https://twistedmatrix.com/documents/current/core/howto/index.html core networking libraries ], including support for SSL, UDP, scheduled events, unit testing infrastructure, and much more.
}}}


{{{
#!div class="tab-pane" id="webserver"
Twisted includes an event-driven web server. Here's a sample web application; notice how the resource object persists in memory, rather than being recreated on each request:

{{{
#!python
from twisted.web import server, resource
from twisted.internet import reactor, endpoints

class Counter(resource.Resource):
    isLeaf = True
    numberRequests = 0

    def render_GET(self, request):
        self.numberRequests += 1
        request.setHeader(b"content-type", b"text/plain")
        content = u"I am request #{}\n".format(self.numberRequests)
        return content.encode("ascii")

endpoints.serverFromString(reactor, "tcp:8080").listen(server.Site(Counter()))
reactor.run()
}}}

Learn more about [https://twistedmatrix.com/documents/current/web/howto/web-in-60/index.html web application development], [https://twistedmatrix.com/documents/current/web/howto/twisted-templates.html templates] and Twisted's [https://twistedmatrix.com/documents/current/web/howto/client.html HTTP client].
}}}

{{{
#!div class="tab-pane" id="pubsubserver"
Here's a simple publish/subscribe server, where clients see all messages posted by other clients:

{{{
#!python
from twisted.internet import reactor, protocol, endpoints
from twisted.protocols import basic

class PubProtocol(basic.LineReceiver):
    def __init__(self, factory):
        self.factory = factory

    def connectionMade(self):
        self.factory.clients.add(self)

    def connectionLost(self, reason):
        self.factory.clients.remove(self)

    def lineReceived(self, line):
        for c in self.factory.clients:
            source = u"<{}> ".format(self.transport.getHost()).encode("ascii")
            c.sendLine(source + line)

class PubFactory(protocol.Factory):
    def __init__(self):
        self.clients = set()

    def buildProtocol(self, addr):
        return PubProtocol(self)

endpoints.serverFromString(reactor, "tcp:1025").listen(PubFactory())
reactor.run()
}}}

You can test this out by opening two terminals and doing `telnet localhost 1025` in each, then typing things.

}}}

{{{
#!div class="tab-pane" id="imap4client"

Twisted includes a sophisticated IMAP4 client library.

{{{
#!python
import sys

from twisted.internet import protocol, defer, endpoints, task
from twisted.mail import imap4
from twisted.python import failure


async def main(
    reactor, username="alice", password="secret", strport="tls:example.com:993"
):
    endpoint = endpoints.clientFromString(reactor, strport)
    factory = protocol.Factory.forProtocol(imap4.IMAP4Client)
    try:
        client = await endpoint.connect(factory)
        await client.login(username.encode("utf-8"),
                           password.encode("utf-8"))
        await client.select("INBOX")
        info = await client.fetchEnvelope(imap4.MessageSet(1))
        print("First message subject:", info[1]["ENVELOPE"][1])
    except:
        print("IMAP4 client interaction failed")
        print(failure.Failure().getTraceback())


task.react(lambda *a, **k: defer.ensureDeferred(main(*a, **k)), sys.argv[1:])
}}}

Give this a try, supplying your IMAP4 username, app password ([https://support.google.com/accounts/answer/185833?hl=en generate one for gmail], [https://www.fastmail.com/help/clients/apppassword.html generate one for fastmail]), and [https://twistedmatrix.com/documents/current/core/howto/endpoints.html#auto7 client endpoint description] for your IMAP4 server.  You'll see the subject of the first message in your mailbox printed.

See the TwistedMail documentation for more information.

}}}

{{{
#!div class="tab-pane" id="sshclient"

Twisted includes an SSH client & server, "conch" (i.e.: the Twisted Shell).

{{{
#!python
import sys, os

from twisted.internet import protocol, defer, endpoints, task
from twisted.conch.endpoints import SSHCommandClientEndpoint

async def main(reactor, username="alice", sshhost="example.com", portno="22"):
    envAgent = endpoints.UNIXClientEndpoint(reactor, os.environ["SSH_AUTH_SOCK"])
    endpoint = SSHCommandClientEndpoint.newConnection(
        reactor, "echo 'hello world'", username, sshhost,
        int(portno), agentEndpoint=envAgent,
    )

    class ShowOutput(protocol.Protocol):
        received = b""
        def dataReceived(self, data):
            self.received += data
        def connectionLost(self, reason):
            finished.callback(self.received)

    finished = defer.Deferred()
    factory = protocol.Factory.forProtocol(ShowOutput)
    await endpoint.connect(factory)
    print("SSH response:", await finished)

task.react(lambda *a, **k: defer.ensureDeferred(main(*a, **k)), sys.argv[1:])
}}}

You can use this client to run "hello world" on any SSH server that your local SSH agent can authenticate to, if you pass your username, host name, and optionally port number on the command line.

}}}


}}}


== More Protocols ==

Twisted also supports many common network protocols, including SMTP, POP3, IMAP, SSHv2, and DNS. For more information see our [wiki:Documentation documentation] and [https://twistedmatrix.com/documents/current/api/ API reference].

== Community ==

 * Get in touch with the [wiki:TwistedCommunity Twisted community] through [wiki:TwistedCommunity#MailLists email], [https://stackoverflow.com/questions/tagged/twisted Stack Overflow] or [wiki:TwistedCommunity#IRC IRC];
 * Learn about the Twisted [wiki:TwistedDevelopment development process] and how to [wiki:ContributingToTwistedLabs contribute];
 * Read about [wiki:ProjectsUsingTwisted software using] Twisted and their [wiki:SuccessStories success stories];
 * Find out what [wiki:TwistedMatrixLaboratories Twisted Matrix Laboratories] is;
 * Learn about the [wiki:TwistedSponsors individuals and organisations] that aid Twisted with donations of hardware, software, hosting and other things;
 * Help improve Twisted on [wiki:Windows Windows]!
}}}

{{{
#!div class="column-layout" style="display: none;"

[mailto:dennis.mills@glyph.im Human beings, please do not send messages to this email address!]
}}}